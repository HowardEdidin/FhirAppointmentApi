@using System.Drawing
@using ViewAppointments.Controllers
    @* DXCOMMENT: Configure GridView *@
    @Html.DevExpress().GridView(
    settings =>
    {
        settings.Name = "GridView";
        settings.CallbackRouteValues = new { Controller = "Home", Action = "GridViewPartialView" };



        settings.KeyFieldName = "id";
        settings.Width = Unit.Percentage(100);
        settings.SettingsPager.PageSize = 10;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = 350;
        settings.ControlStyle.Paddings.Padding = Unit.Pixel(0);
        settings.ControlStyle.Border.BorderWidth = Unit.Pixel(0);
        settings.ControlStyle.BorderBottom.BorderWidth = Unit.Pixel(1);

        settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
        settings.SettingsPager.AlwaysShowPager = true;
        settings.SettingsPager.Position = PagerPosition.Bottom;
        settings.SettingsPager.NumericButtonCount = 10;
        settings.SettingsPager.EnableAdaptivity = true;
        settings.SettingsPager.Position = PagerPosition.Bottom;
        settings.SettingsPager.FirstPageButton.Visible = true;
        settings.SettingsPager.LastPageButton.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Items = new[] { "10", "20", "40" };
        settings.Settings.ShowTitlePanel = true;
        settings.SettingsText.EmptyDataRow = "No Appoinments to Display";

        settings.SettingsText.Title = "Appointment Requests";
        settings.Styles.TitlePanel.Border.BorderStyle = BorderStyle.Inset;
        settings.Styles.TitlePanel.Font.Bold = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;


        settings.SettingsLoadingPanel.Enabled = true;
        settings.SettingsLoadingPanel.Mode = GridViewLoadingPanelMode.ShowAsPopup;

        settings.Settings.ShowPreview = true;
        settings.PreviewFieldName = "Comment";
        settings.Styles.PreviewRow.BackColor = Color.WhiteSmoke;
        settings.Styles.PreviewRow.BorderStyle = BorderStyle.Solid;
      

        settings.Styles.AlternatingRow.Enabled = DefaultBoolean.True;
        settings.Styles.AlternatingRow.BackColor = Color.Azure;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.Width = Unit.Pixel(60);
        settings.Styles.CommandColumn.BackColor = Color.AliceBlue;


        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.SettingsBehavior.AllowFocusedRow = false;
        settings.SettingsBehavior.AllowSelectSingleRowOnly = true;


        var customButton = new GridViewCommandColumnCustomButton() { ID = "Listen", Text = "Listen" };
        settings.CommandColumn.CustomButtons.Add(customButton);
        settings.ClientSideEvents.CustomButtonClick = "OnCustomButtonClick";
        settings.ClientSideEvents.CallbackError = "";


        // DXCOMMENT: Configure grid's columns in accordance with data model fields

        settings.Columns.Add(column =>
        {
            column.FieldName = "id";
            column.ReadOnly = true;
            column.Visible = false;
            column.ColumnType = MVCxGridViewColumnType.Default;
            column.Index = 0;

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "Status";
            column.Width = Unit.Pixel(70);
            column.ReadOnly = true;
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.Index = 1;

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "Priority";
            column.Width = Unit.Pixel(50);
            column.ReadOnly = true;
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.Index = 2;
            column.CellStyle.HorizontalAlign = HorizontalAlign.Center;

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "Description";
            column.Width = Unit.Pixel(100);
            column.ReadOnly = true;
            column.ColumnType = MVCxGridViewColumnType.Default;
            column.Index = 3;

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "Start";
            column.Width = Unit.Pixel(80);
            column.ReadOnly = true;
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            column.Index = 4;
            column.PropertiesEdit.DisplayFormatString = "MM-dd-yyyy hh:mm";


        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "End";
            column.Width = Unit.Pixel(80);
            column.ReadOnly = true;
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            column.Index = 5;
            column.PropertiesEdit.DisplayFormatString = "MM-dd-yyyy hh:mm";

        });





        settings.CustomJSProperties = (sender, e) =>
        {
            var gridView = (MVCxGridView)sender;

            if (gridView.EditingRowVisibleIndex > -1)
            {
                e.Properties["cpid"] = gridView.GetRowValues(gridView.EditingRowVisibleIndex, "id");

            }

        };

        settings.ClientSideEvents.BeginCallback = "function(s, e) {if(s.cpid) e.customArgs['id'] =  s.cpid; }";

    }).SetEditErrorText((string)ViewData["EditError"]).Bind(Model).GetHtml()
